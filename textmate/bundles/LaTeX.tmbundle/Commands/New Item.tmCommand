<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby18
#
# Produces the right enumeration command for each environment.
# For instance in a itemize environment, will produce \item
# while in a questions environment will produce \question
#
linesbefore = ENV['TM_LINE_NUMBER'].to_i-1
columns = ENV['TM_COLUMN_NUMBER'].to_i-1
textArray = STDIN.readlines
myStr = textArray[0..linesbefore-1].join
myStr &lt;&lt; textArray[linesbefore].slice(0..columns-1)
theArray = Array.new
theRegexp = Regexp.new('(\\\begin\{|\\\end\{)(\w+[*]?)(\})')
toInsertNoBeamer = { "itemize" =&gt; "\\item $1", "enumerate" =&gt; "\\item $1", "description" =&gt; "\\item[${1:label}] ${2:description}", "parts" =&gt; "\\part $1", "questions" =&gt; "\\question $1" }
toInsertBeamer = { "itemize" =&gt; "\\item&lt;${1:+-}&gt; $2", "enumerate" =&gt; "\\item&lt;${1:+-}&gt; $2", "description" =&gt; "\\item&lt;+-&gt;[${1:label}] ${2:description}", "overprint" =&gt; "\\onslide&lt;${1:+}&gt;\n\t$2", "overlayarea" =&gt; "\\only&lt;${1:+}&gt; $2" }
toInsert = /beamer/.match(ENV['TM_SCOPE'].to_s) ? toInsertBeamer : toInsertNoBeamer
results = myStr.scan(theRegexp)
if (results)
  results.each{|e|
    if (e[0] == "\\begin\{")
      theArray &lt;&lt; e[1]
    elsif (e[0] == "\\end\{")
      if (theArray.last == e[1])
        theArray.pop
      else
        puts("Badly nested begin-end blocks")
        exit 1
      end
    else
      puts("Problem:",e[0])
      exit 1
    end
  }
  envName = theArray.pop
  str_to_add = "\n"
  if (/\\begin\{/.match(textArray[linesbefore]))
    str_to_add &lt;&lt; "\t"
  end
  if (toInsert.has_key?(envName))
    str_to_add &lt;&lt; toInsert[envName]
  elsif ["cases","align","aligned","gather","gathered","split"].include?(envName)
    str_to_add = "\\\\\\\\" + str_to_add
  else
    str_to_add &lt;&lt; "\\item "
  end
  print str_to_add
else
  print("\n")
end</string>
	<key>input</key>
	<string>document</string>
	<key>keyEquivalent</key>
	<string></string>
	<key>name</key>
	<string>New Item</string>
	<key>output</key>
	<string>insertAsSnippet</string>
	<key>scope</key>
	<string>text.tex.latex meta.function.environment</string>
	<key>uuid</key>
	<string>948DDCF2-0EB5-46A3-B970-09597D268BAF</string>
</dict>
</plist>
